diff --git a/node_modules/rn-swipeable-panel/dist/Panel.d.ts b/node_modules/rn-swipeable-panel/dist/Panel.d.ts
index 0368e4c..f75a86a 100644
--- a/node_modules/rn-swipeable-panel/dist/Panel.d.ts
+++ b/node_modules/rn-swipeable-panel/dist/Panel.d.ts
@@ -17,6 +17,7 @@ declare type SwipeablePanelProps = {
     noBar?: boolean;
     barStyle?: object;
     barContainerStyle?: object;
+    barChildren?: any;
     allowTouchOutside?: boolean;
     scrollViewProps?: ScrollViewProps;
 };
diff --git a/node_modules/rn-swipeable-panel/dist/Panel.d.ts.orig b/node_modules/rn-swipeable-panel/dist/Panel.d.ts.orig
new file mode 100644
index 0000000..f75a86a
--- /dev/null
+++ b/node_modules/rn-swipeable-panel/dist/Panel.d.ts.orig
@@ -0,0 +1,51 @@
+import { Component } from 'react';
+import { Animated, ScrollViewProps } from 'react-native';
+declare type SwipeablePanelProps = {
+    isActive: boolean;
+    onClose: () => void;
+    showCloseButton?: boolean;
+    fullWidth?: boolean;
+    noBackgroundOpacity?: boolean;
+    style?: object;
+    closeRootStyle?: object;
+    closeIconStyle?: object;
+    closeOnTouchOutside?: boolean;
+    onlyLarge?: boolean;
+    onlySmall?: boolean;
+    openLarge?: boolean;
+    smallPanelHeight?: number;
+    noBar?: boolean;
+    barStyle?: object;
+    barContainerStyle?: object;
+    barChildren?: any;
+    allowTouchOutside?: boolean;
+    scrollViewProps?: ScrollViewProps;
+};
+declare type SwipeablePanelState = {
+    status: number;
+    isActive: boolean;
+    showComponent: boolean;
+    canScroll: boolean;
+    opacity: Animated.Value;
+    pan: any;
+    orientation: 'portrait' | 'landscape';
+    deviceWidth: number;
+    deviceHeight: number;
+    panelHeight: number;
+};
+declare class SwipeablePanel extends Component<SwipeablePanelProps, SwipeablePanelState> {
+    pan: Animated.ValueXY;
+    isClosing: boolean;
+    _panResponder: any;
+    animatedValueY: number;
+    constructor(props: SwipeablePanelProps);
+    componentDidMount: () => void;
+    _onOrientationChange: () => void;
+    componentDidUpdate(prevProps: SwipeablePanelProps, prevState: SwipeablePanelState): void;
+    _animateTo: (newStatus?: number) => void;
+    render(): JSX.Element | null;
+}
+declare const SMALL_PANEL_CONTENT_HEIGHT: number;
+declare const LARGE_PANEL_CONTENT_HEIGHT: number;
+export { SwipeablePanel, LARGE_PANEL_CONTENT_HEIGHT, SMALL_PANEL_CONTENT_HEIGHT };
+export type { SwipeablePanelProps };
diff --git a/node_modules/rn-swipeable-panel/dist/Panel.d.ts.rej b/node_modules/rn-swipeable-panel/dist/Panel.d.ts.rej
new file mode 100644
index 0000000..5dca647
--- /dev/null
+++ b/node_modules/rn-swipeable-panel/dist/Panel.d.ts.rej
@@ -0,0 +1,16 @@
+***************
+*** 17,22 ****
+      noBar?: boolean;
+      barStyle?: object;
+      barContainerStyle?: object;
+      allowTouchOutside?: boolean;
+      scrollViewProps?: ScrollViewProps;
+  };
+--- 17,23 ----
+      noBar?: boolean;
+      barStyle?: object;
+      barContainerStyle?: object;
++     barChildren?: any;
+      allowTouchOutside?: boolean;
+      scrollViewProps?: ScrollViewProps;
+  };
diff --git a/node_modules/rn-swipeable-panel/src/Bar.tsx b/node_modules/rn-swipeable-panel/src/Bar.tsx
index dcf1746..88ff11f 100644
--- a/node_modules/rn-swipeable-panel/src/Bar.tsx
+++ b/node_modules/rn-swipeable-panel/src/Bar.tsx
@@ -4,12 +4,14 @@ import { StyleSheet, View } from 'react-native';
 type BarProps = {
   barStyle?: object;
   barContainerStyle?: object;
+  barChildren? : any
 };
 
-export const Bar = ({ barStyle, barContainerStyle }: BarProps) => {
+export const Bar = ({ barStyle, barContainerStyle ,barChildren}: BarProps) => {
   return (
     <View style={[BarStyles.barContainer, barContainerStyle]}>
       <View style={[BarStyles.bar, barStyle]} />
+      {barChildren?.()}
     </View>
   );
 };
diff --git a/node_modules/rn-swipeable-panel/src/Bar.tsx.rej b/node_modules/rn-swipeable-panel/src/Bar.tsx.rej
new file mode 100644
index 0000000..56a997c
--- /dev/null
+++ b/node_modules/rn-swipeable-panel/src/Bar.tsx.rej
@@ -0,0 +1,29 @@
+***************
+*** 4,15 ****
+  type BarProps = {
+    barStyle?: object;
+    barContainerStyle?: object;
+  };
+  
+- export const Bar = ({ barStyle, barContainerStyle }: BarProps) => {
+    return (
+      <View style={[BarStyles.barContainer, barContainerStyle]}>
+        <View style={[BarStyles.bar, barStyle]} />
+      </View>
+    );
+  };
+--- 4,17 ----
+  type BarProps = {
+    barStyle?: object;
+    barContainerStyle?: object;
++   barChildren? : any
+  };
+  
++ export const Bar = ({ barStyle, barContainerStyle ,barChildren}: BarProps) => {
+    return (
+      <View style={[BarStyles.barContainer, barContainerStyle]}>
+        <View style={[BarStyles.bar, barStyle]} />
++       {barChildren?.()}
+      </View>
+    );
+  };
diff --git a/node_modules/rn-swipeable-panel/src/Panel.tsx b/node_modules/rn-swipeable-panel/src/Panel.tsx
index 6eb28e4..7b4d760 100644
--- a/node_modules/rn-swipeable-panel/src/Panel.tsx
+++ b/node_modules/rn-swipeable-panel/src/Panel.tsx
@@ -41,6 +41,7 @@ type SwipeablePanelProps = {
   noBar?: boolean;
   barStyle?: object;
   barContainerStyle?: object,
+  barChildren?: any,
   allowTouchOutside?: boolean;
   scrollViewProps?: ScrollViewProps;
 };
@@ -201,17 +202,19 @@ class SwipeablePanel extends Component<SwipeablePanelProps, SwipeablePanelState>
   };
 
   render() {
-    const { showComponent, deviceWidth, deviceHeight, panelHeight } = this.state;
+    const { showComponent, deviceWidth, deviceHeight, panelHeight,status } = this.state;
     const {
       noBackgroundOpacity,
       style,
       barStyle,
+      barChildren,
       barContainerStyle,
       closeRootStyle,
       closeIconStyle,
       onClose,
       allowTouchOutside,
       closeOnTouchOutside,
+      smallPanelHeight
     } = this.props;
 
     return showComponent ? (
@@ -219,8 +222,8 @@ class SwipeablePanel extends Component<SwipeablePanelProps, SwipeablePanelState>
         style={[
           SwipeablePanelStyles.background,
           {
-            backgroundColor: noBackgroundOpacity ? 'rgba(0,0,0,0)' : 'rgba(0,0,0,0.5)',
-            height: allowTouchOutside ? 'auto' : deviceHeight,
+            backgroundColor:noBackgroundOpacity ? 'rgba(0,0,0,0)' : 'rgba(0,0,0,0.5)',
+            height: status === STATUS.LARGE ? panelHeight  : this.props.smallPanelHeight-100 ,//allowTouchOutside ? 'auto' : deviceHeight,
             width: deviceWidth,
           },
         ]}
@@ -251,7 +254,7 @@ class SwipeablePanel extends Component<SwipeablePanelProps, SwipeablePanelState>
           ]}
           {...this._panResponder.panHandlers}
         >
-          {!this.props.noBar && <Bar barStyle={barStyle} barContainerStyle={barContainerStyle} />}
+          {!this.props.noBar && <Bar barStyle={barStyle} barContainerStyle={barContainerStyle} barChildren = {barChildren}/>}
           {this.props.showCloseButton && (
             <Close rootStyle={closeRootStyle} iconStyle={closeIconStyle} onPress={this.props.onClose} />
           )}
